<?php
/*
*
* -------------------------------------------------------
* CLASSNAME:        cls_proc_equivalencia_unidad
* GENERATION DATE:  14.01.2020
* CLASS FILE:       C:\xampp\htdocs\generator/generated_classes/class.cls_proc_equivalencia_unidad.php
* FOR MYSQL TABLE:  proc_equivalencia_unidad
* FOR MYSQL DB:     erp
* -------------------------------------------------------
* CODE GENERATED BY:
* MY PHP-MYSQL-CLASS GENERATOR
* from: >> www.voegeli.li >> (download for free!)
* -------------------------------------------------------
*
*/

require_once("../conexion/conexion.php");

// **********************
// CLASS DECLARATION
// **********************

class cls_proc_equivalencia_unidad
{ // class : begin


// **********************
// ATTRIBUTE DECLARATION
// **********************

var $prod_equiv_id;   // KEY ATTR. WITH AUTOINCREMENT

var $pro_prod_equiv_id;   // (normal Attribute)
var $prod_equiv_nombre;   // (normal Attribute)
var $prod_equiv_descripcion;   // (normal Attribute)
var $prod_equiv_valor;   // (normal Attribute)
var $prod_equiv_unidad;   // (normal Attribute)
var $prod_equiv_color;
var $prod_equiv_tipo;
var $prod_equiv_etiqueta;
var $prod_codigo;   // KEY ATTR. WITH AUTOINCREMENT
var $cat_id;   // (normal Attribute)
var $arrprod_equiv;
var $arrasoc;

var $total_prod_equivegoria;
var $database; // Instance of class database


// **********************
// CONSTRUCTOR METHOD
// **********************

function cls_proc_equivalencia_unidad()
{

$this->database = new Database();

}


// **********************
// GETTER METHODS
// **********************
function getcat_id()
{
return $this->cat_id;
}

function getprod_codigo()
{
return $this->prod_codigo;
}

function getprod_equiv_id()
{
return $this->prod_equiv_id;
}

function getprod_equiv_nombre()
{
return $this->prod_equiv_nombre;
}

function getprod_equiv_descripcion()
{
return $this->prod_equiv_descripcion;
}

function getprod_equiv_valor()
{
return $this->prod_equiv_valor;
}

function getprod_equiv_unidad()
{
return $this->prod_equiv_unidad;
}
 
// **********************
// SETTER METHODS
// **********************
function setcat_id($val)
{
$this->cat_id =  $val;
}
function setprod_codigo($val)
{
$this->prod_codigo =  $val;
}
function setprod_equiv_id($val)
{
$this->prod_equiv_id =  $val;
}

function setprod_equiv_nombre($val)
{
$this->prod_equiv_nombre =  $val;
}

function setprod_equiv_descripcion($val)
{
$this->prod_equiv_descripcion =  $val;
}

function setprod_equiv_valor($val)
{
$this->prod_equiv_valor =  $val;
}

function setprod_equiv_unidad($val)
{
$this->prod_equiv_unidad =  $val;
}
// **********************
// SELECT METHOD / LOAD
// **********************
function getdataxprod_codigo()
{
$prod_equiv_nombre = $this->getprod_equiv_nombre();
$prod_equiv_id = $this->getprod_equiv_id();
//$pro_prod_equiv_id = 3;
$prod_codigo = $this->getprod_codigo();

$sql =  "SELECT * FROM proc_equivalencia_unidad e 
    inner join equivalencia_prod a on e.prod_equiv_id = a.prod_equiv_id 
    inner join proc_umedida u   on e.prod_equiv_unidad = u.umed_codigo 
where a.prod_codigo = '$prod_codigo' order by prod_equiv_nombre asc ";
$result =  $this->database->query($sql);
$i=0;
    while($datos = $this->database->fetch_array($result)){
        
        $this->arrprod_equiv[$i]['prod_equiv_id'] = $datos['prod_equiv_id']; 
        $this->arrprod_equiv[$i]['prod_equiv_nombre'] = $datos['prod_equiv_nombre']; 
        $this->arrprod_equiv[$i]['prod_equiv_descripcion'] = $datos['prod_equiv_descripcion'];
        $this->arrprod_equiv[$i]['prod_equiv_valor'] = $datos['prod_equiv_valor']; 
        $this->arrprod_equiv[$i]['prod_equiv_unidad'] = $datos['prod_equiv_unidad']; 
          $this->arrprod_equiv[$i]['umed_nombre'] = $datos['umed_nombre']; 
         
     $i++;
    } 
}
function getdataxid()
{
$prod_equiv_nombre = $this->getprod_equiv_nombre();
$prod_equiv_id = $this->getprod_equiv_id();
//$pro_prod_equiv_id = 3;

$sql =  "SELECT * FROM `proc_equivalencia_unidad` WHERE prod_equiv_id = '$prod_equiv_id' ";
$result =  $this->database->query($sql);
$i=0;
    while($datos = $this->database->fetch_array($result)){
        
        $this->arrprod_equiv[$i]['prod_equiv_id'] = $datos['prod_equiv_id']; 
        $this->arrprod_equiv[$i]['prod_equiv_nombre'] = $datos['prod_equiv_nombre']; 
        $this->arrprod_equiv[$i]['prod_equiv_descripcion'] = $datos['prod_equiv_descripcion'];
        $this->arrprod_equiv[$i]['prod_equiv_valor'] = $datos['prod_equiv_valor']; 
        $this->arrprod_equiv[$i]['prod_equiv_unidad'] = $datos['prod_equiv_unidad']; 
         
     $i++;
    } 
}
function buscadatanombre()
{
$prod_equiv_nombre = $this->getprod_equiv_nombre();
//$pro_prod_equiv_id = 3;

$sql =  "SELECT * FROM `proc_equivalencia_unidad` WHERE prod_equiv_nombre = '$prod_equiv_nombre' ";
$result =  $this->database->query($sql);
$i=0;
    while($datos = $this->database->fetch_array($result)){
        
        $this->arrprod_equiv[$i]['prod_equiv_id'] = $datos['prod_equiv_id']; 
     //   $this->arrprod_equiv[$i]['pro_prod_equiv_id'] = $datos['parent']; 
        $this->arrprod_equiv[$i]['prod_equiv_nombre'] = $datos['prod_equiv_nombre']; 
        $this->arrprod_equiv[$i]['prod_equiv_etiqueta'] = $datos['prod_equiv_etiqueta']; 
    //    $this->arrprod_equiv[$i]['prod_equiv_color'] = $datos['prod_equiv_color']; 
     //   $this->arrprod_equiv[$i]['prod_equiv_etiqueta'] = $datos['prod_equiv_etiqueta']; 
         
     $i++;
    } 
}
function selectdata()
{
$prod_equiv_id = $this->getprod_equiv_id();
//$pro_prod_equiv_id = 3;

$sql =  "SELECT * FROM `proc_equivalencia_unidad` WHERE 1 ";
$result =  $this->database->query($sql);
$i=0;
    while($datos = $this->database->fetch_array($result)){
        
        $this->arrprod_equiv[$i]['prod_equiv_id'] = $datos['prod_equiv_id']; 
     //   $this->arrprod_equiv[$i]['pro_prod_equiv_id'] = $datos['parent']; 
        $this->arrprod_equiv[$i]['prod_equiv_nombre'] = $datos['prod_equiv_nombre']; 
        $this->arrprod_equiv[$i]['prod_equiv_etiqueta'] = $datos['prod_equiv_etiqueta']; 
    //    $this->arrprod_equiv[$i]['prod_equiv_color'] = $datos['prod_equiv_color']; 
     //   $this->arrprod_equiv[$i]['prod_equiv_etiqueta'] = $datos['prod_equiv_etiqueta']; 
         
     $i++;
    } 
}
function selectarbol()
{
$prod_equiv_id = $this->getprod_equiv_id();
//$pro_prod_equiv_id = 3;

$sql =  "select t.prod_equiv_id as id, @pv:=t.pro_prod_equiv_id as parent , t.prod_equiv_nombre, t.prod_equiv_etiqueta "
        . "from (select * from  proc_equivalencia_unidad order by prod_equiv_id desc) t join "
        . "(select @pv:='$prod_equiv_id')tmp where t.prod_equiv_id=@pv; ";
$result =  $this->database->query($sql);
$i=0;
    while($datos = $this->database->fetch_array($result)){
        
        $this->arrprod_equiv[$i]['prod_equiv_id'] = $datos['id']; 
     //   $this->arrprod_equiv[$i]['pro_prod_equiv_id'] = $datos['parent']; 
        $this->arrprod_equiv[$i]['prod_equiv_nombre'] = $datos['prod_equiv_nombre']; 
        $this->arrprod_equiv[$i]['prod_equiv_etiqueta'] = $datos['prod_equiv_etiqueta']; 
    //    $this->arrprod_equiv[$i]['prod_equiv_color'] = $datos['prod_equiv_color']; 
     //   $this->arrprod_equiv[$i]['prod_equiv_etiqueta'] = $datos['prod_equiv_etiqueta']; 
         
     $i++;
    } 
}
function totalxprod_equiv()
{
$pro_prod_equiv_id = $this->getpro_prod_equiv_id();
$prod_equiv_tipo = $this->getprod_equiv_tipo();
if(!is_null($pro_prod_equiv_id))
    $sql =  "SELECT count(*) as total_prod_equivegoria FROM proc_equivalencia_unidad WHERE  pro_prod_equiv_id = '$pro_prod_equiv_id' and prod_equiv_tipo = '$prod_equiv_tipo'";
else 
     $sql =  "SELECT count(*) as total_prod_equivegoria FROM proc_equivalencia_unidad WHERE  pro_prod_equiv_id is null  and prod_equiv_tipo = '$prod_equiv_tipo'";
   
$result = $this->database->query($sql);
 $i=0;
    while($datos = $this->database->fetch_array($result)){
       
        $this->total_prod_equivegoria = $datos['total_prod_equivegoria'];  
         $i++;
    } 
}
function selectsubprod_equiv()
{
$pro_prod_equiv_id = $this->getpro_prod_equiv_id();
//$pro_prod_equiv_id = 3;
$sql =  "select t.prod_equiv_id, t.pro_prod_equiv_id , t.prod_equiv_nombre, t.prod_equiv_etiqueta from (select * from  proc_equivalencia_unidad"
        . " order by prod_equiv_nombre asc) t join (select @pv:='$pro_prod_equiv_id')tmp where  "
        . " find_in_set(pro_prod_equiv_id, @pv) and     length(@pv := conprod_equiv(@pv, ',', prod_equiv_id ))";
$result =  $this->database->query($sql);
$i=0;
    while($datos = $this->database->fetch_array($result)){
        
        $this->arrprod_equiv[$i]['prod_equiv_id'] = $datos['prod_equiv_id']; 
   //     $this->arrprod_equiv[$i]['pro_prod_equiv_id'] = $datos['pro_prod_equiv_id']; 
        $this->arrprod_equiv[$i]['prod_equiv_nombre'] = $datos['prod_equiv_nombre']; 
        $this->arrprod_equiv[$i]['prod_equiv_color'] = $datos['prod_equiv_color']; 
        $this->arrprod_equiv[$i]['prod_equiv_etiqueta'] = $datos['prod_equiv_etiqueta']; 
         
     $i++;
    } 
}
function getprod_equivgeneralxnombre()
{
$prod_equiv_nombre = $this->getprod_equiv_nombre();
$prod_equiv_tipo = $this->getprod_equiv_tipo();
$sql =  "SELECT * FROM `proc_equivalencia_unidad` WHERE `pro_prod_equiv_id` is null and prod_equiv_tipo = '$prod_equiv_tipo' and prod_equiv_nombre LIKE '$prod_equiv_nombre' "
        . " order by prod_equiv_nombre asc  ;";
$result =  $this->database->query($sql);
$i=0;
    while($datos = $this->database->fetch_array($result)){
        
        $this->arrprod_equiv[$i]['prod_equiv_id'] = $datos['prod_equiv_id']; 
 //       $this->arrprod_equiv[$i]['pro_prod_equiv_id'] = $datos['pro_prod_equiv_id']; 
        $this->arrprod_equiv[$i]['prod_equiv_nombre'] = $datos['prod_equiv_nombre']; 
        $this->arrprod_equiv[$i]['prod_equiv_color'] = $datos['prod_equiv_color']; 
        $this->arrprod_equiv[$i]['prod_equiv_etiqueta'] = $datos['prod_equiv_etiqueta']; 
     $i++;
    } 
}
function selectgeneral()
{
$prod_equiv_tipo = $this->getprod_equiv_tipo();
$sql =  "SELECT * FROM `proc_equivalencia_unidad` WHERE `pro_prod_equiv_id` is null and prod_equiv_tipo = '$prod_equiv_tipo' order by prod_equiv_nombre asc ;";
$result =  $this->database->query($sql);
$i=0;
    while($datos = $this->database->fetch_array($result)){
        
        $this->arrprod_equiv[$i]['prod_equiv_id'] = $datos['prod_equiv_id']; 
//        $this->arrprod_equiv[$i]['pro_prod_equiv_id'] = $datos['pro_prod_equiv_id']; 
        $this->arrprod_equiv[$i]['prod_equiv_nombre'] = $datos['prod_equiv_nombre']; 
   //     $this->arrprod_equiv[$i]['prod_equiv_color'] = $datos['prod_equiv_color']; 
    //    $this->arrprod_equiv[$i]['prod_equiv_etiqueta'] = $datos['prod_equiv_etiqueta']; 
     $i++;
    } 
}

function select($id)
{

$sql =  "SELECT * FROM proc_equivalencia_unidad WHERE prod_equiv_id = $id;";
$result =  $this->database->query($sql);
$result = $this->database->result;
$row = mysql_fetch_object($result);


$this->prod_equiv_id = $row->prod_equiv_id;

$this->prod_equiv_nombre = $row->prod_equiv_nombre;

$this->prod_equiv_descripcion = $row->prod_equiv_descripcion;

$this->prod_equiv_valor = $row->prod_equiv_valor;

$this->prod_equiv_unidad = $row->prod_equiv_unidad;


}

// **********************
// DELETE
// **********************

function delete()
{
 $id = $this->getprod_equiv_id();
$sql = "DELETE FROM proc_equivalencia_unidad WHERE prod_equiv_id =  $id ";
$result = $this->database->query($sql);

}

// **********************
// INSERT
// **********************

function insert()
{
$this->prod_equiv_id = ""; // clear key for autoincrement

    $sql = "INSERT INTO proc_equivalencia_unidad ( prod_equiv_nombre,prod_equiv_descripcion,prod_equiv_valor,prod_equiv_unidad ) "
            . "VALUES ( '$this->prod_equiv_nombre','$this->prod_equiv_descripcion','$this->prod_equiv_valor','$this->prod_equiv_unidad' )";
$result = $this->database->query($sql);
$this->prod_equiv_id = mysql_insert_id();

}
function insert_equivalencia_prod()
{
$this->prod_equiv_id = $this->getprod_equiv_id();
$this->prod_codigo = $this->getprod_codigo();

    $sql = "INSERT INTO equivalencia_prod ( prod_equiv_id, prod_codigo ) "
            . "VALUES ( '$this->prod_equiv_id','$this->prod_codigo' )";
$result = $this->database->query($sql);
//$this->prod_equiv_id = mysql_insert_id();

}


 
function delete_equivalencia_prod()
{
$prod_equiv_id= $this->getprod_equiv_id();
$prod_codigo = $this->getprod_codigo();
$sql = "DELETE FROM equivalencia_prod WHERE prod_equiv_id = '$prod_equiv_id' and prod_codigo = '$prod_codigo' ";
$result = $this->database->query($sql);

}

function selectdataasoc()
{
$prod_equiv_id= $this->getprod_equiv_id();
$prod_codigo = $this->getprod_codigo();
//$pro_prod_equiv_id = 3;

$sql =  "SELECT * FROM `equivalencia_prod` WHERE prod_equiv_id = '$prod_equiv_id' and prod_codigo = '$prod_codigo' ";
$result =  $this->database->query($sql);
$i=0;
    while($datos = $this->database->fetch_array($result)){
        
        $this->arrasoc[$i]['prod_equiv_id'] = $datos['prod_equiv_id']; 
        $this->arrasoc[$i]['prod_codigo'] = $datos['prod_codigo']; 
     
         
     $i++;
    } 
}
// **********************
// UPDATE
// **********************
function editar2()
{

$id = $this->getprod_equiv_id();

$sql = " UPDATE proc_equivalencia_unidad SET  prod_equiv_nombre = '$this->prod_equiv_nombre' WHERE prod_equiv_id = $id ";

$result = $this->database->query($sql);



}
function editar()
{


$id = $this->getprod_equiv_id();
$sql = " UPDATE proc_equivalencia_unidad SET  prod_equiv_nombre = '$this->prod_equiv_nombre',prod_equiv_descripcion = '$this->prod_equiv_descripcion',"
        . "prod_equiv_valor = '$this->prod_equiv_valor',prod_equiv_unidad = '$this->prod_equiv_unidad' WHERE prod_equiv_id = $id ";

$result = $this->database->query($sql);



}


} 

?>